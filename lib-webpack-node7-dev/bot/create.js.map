{"version":3,"sources":["../../src/bot/create.js"],"names":["RtmClient","WebClient","MemoryDataStore","Bot","TeamType","createBot","teamOrAccessToken","team","accessToken","bot","rtm","logLevel","autoReconnect","autoMark","dataStore","webClient","installerUsersWebClients","Map","installations","forEach","installation","set","user","id","start"],"mappings":"AACA,SAASA,SAAT,EAAoBC,SAApB,EAA+BC,eAA/B,QAAsD,eAAtD;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAAcC,qBAAd,QAA8B,WAA9B;;;;AAEA,kDAAuB,yBAAW,UAAX,CAAvB;;;AAEA,eAAe,SAASC,SAAT,CAAmBC,iBAAnB,EAAuD;AAAA,+BAAnB,eAAmB;;AACpE,QAAMC,OAAO,OAAOD,iBAAP,KAA6B,QAA7B,GAAwC,IAAxC,GAA+CA,iBAA5D;AACA,QAAME,cAAcD,OAAOA,KAAKE,GAAL,CAASD,WAAhB,GAA8BF,iBAAlD;;AAEA,QAAMI,MAAM,IAAIV,SAAJ,CAAcQ,WAAd,EAA2B;AACrCG,cAAiC,MADI;AAErCC,mBAAe,IAFsB;AAGrCC,cAAU,IAH2B;AAIrCC,eAAW,IAAIZ,eAAJ;AAJ0B,GAA3B,CAAZ;;AAOA,QAAMa,YAAY,IAAId,SAAJ,CAAcO,WAAd,CAAlB;;AAEA,QAAMQ,2BAA2B,IAAIC,GAAJ,EAAjC;AACA,MAAIV,QAAQA,KAAKW,aAAjB,EAAgC;AAC9BX,SAAKW,aAAL,CAAmBC,OAAnB,CAA2BC,gBACzBJ,yBAAyBK,GAAzB,CAA6BD,aAAaE,IAAb,CAAkBC,EAA/C,EAAmDH,aAAaE,IAAb,CAAkBd,WAArE,CADF;;AAIAQ,6BAAyBG,OAAzB,CAAiC,CAACX,WAAD,EAAce,EAAd,KAC/BP,yBAAyBK,GAAzB,CAA6BE,EAA7B,EAAiC,IAAItB,SAAJ,CAAcO,WAAd,CAAjC,CADF;AAGD;;AAED,QAAMC,MAAM,IAAIN,GAAJ,CAAQ,EAAEI,IAAF,EAAQG,GAAR,EAAaK,SAAb,EAAwBC,wBAAxB,EAAR,CAAZ;AACA,SAAOP,IAAIe,KAAJ,EAAP;AACD","file":"create.js","sourcesContent":["/* @flow */\nimport { RtmClient, WebClient, MemoryDataStore } from '@slack/client';\nimport Bot from './Bot';\nimport type { TeamType } from '../types/';\n\ntype TeamOrTokenType = TeamType | string;\n\nexport default function createBot(teamOrAccessToken: TeamOrTokenType) {\n  const team = typeof teamOrAccessToken === 'string' ? null : teamOrAccessToken;\n  const accessToken = team ? team.bot.accessToken : teamOrAccessToken;\n\n  const rtm = new RtmClient(accessToken, {\n    logLevel: PRODUCTION ? 'error' : 'info',\n    autoReconnect: true,\n    autoMark: true,\n    dataStore: new MemoryDataStore(),\n  });\n\n  const webClient = new WebClient(accessToken);\n\n  const installerUsersWebClients = new Map();\n  if (team && team.installations) {\n    team.installations.forEach(installation => (\n      installerUsersWebClients.set(installation.user.id, installation.user.accessToken)\n    ));\n\n    installerUsersWebClients.forEach((accessToken, id) => (\n      installerUsersWebClients.set(id, new WebClient(accessToken))\n    ));\n  }\n\n  const bot = new Bot({ team, rtm, webClient, installerUsersWebClients });\n  return bot.start();\n}\n"]}