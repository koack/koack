{"version":3,"sources":["../../src/message-events/index.js"],"names":["logger","ctx","next","teamId","userId","channelId","ts","text","originalText","type","messageType","subtype","messageSubtype","event","destinationType","getChannelType","warn"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,MAAMA,SAAS,gCAAW,sBAAX,CAAf;;kBAEe,yBAAM;AACE,wBADF;;;AAGnB,SAAO,CAACC,GAAD,EAAMC,IAAN,KAAe;AACpB,UAAM,EAAEC,MAAF,EAAUC,MAAV,EAAkBC,SAAlB,KAAgCJ,GAAtC;AACA,UAAM,EAAEK,EAAF,EAAMC,MAAMC,YAAZ,EAA0BC,MAAMC,WAAhC,EAA6CC,SAASC,cAAtD,KAAyEX,IAAIY,KAAnF;AACA,UAAMC,kBAAkBb,IAAIc,cAAJ,EAAxB;;AAEA,QAAI,CAACD,eAAL,EAAsB;AACpBd,aAAOgB,IAAP,CAAY,8BAAZ,EAA4C,EAAEF,eAAF,EAA5C;AACA,aAAOZ,MAAP;AACD;AAIF,GAZD;AAaD,C","file":"index.js","sourcesContent":["import EventEmitter from 'events';\nimport Logger from 'nightingale-logger/src';\n\nconst logger = new Logger('koack:message-events');\n\nexport default () => {\n  const eventEmitter = new EventEmitter();\n\n  return (ctx, next) => {\n    const { teamId, userId, channelId } = ctx;\n    const { ts, text: originalText, type: messageType, subtype: messageSubtype } = ctx.event;\n    const destinationType = ctx.getChannelType();\n\n    if (!destinationType) {\n      logger.warn('Unsupported destination type', { destinationType });\n      return next();\n    }\n\n    const message: MessageType = { ts, text: originalText, teamId, userId, channelId };\n\n  };\n};\n"]}