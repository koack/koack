{"version":3,"sources":["../../src/bot/createContextFromEvent.js"],"names":["extractIdFromEvent","key","event","id","extrackUserIdFromEvent","extrackChannelIdFromEvent","bot","ctx","Object","create","assign","rtm","webClient","team","userId","channelId","logger","setContext","user","name","text"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,MAAMA,qBAAsBC,GAAD;AAAA,UAACA,GAAD;;AAAA,SACxBC,KAAD,IAAmB;AAAA,YAAlBA,KAAkB;;AACjB,QAAI,OAAOA,MAAMD,GAAN,CAAP,KAAsB,QAA1B,EAAoC;AAClC,aAAOC,MAAMD,GAAN,CAAP;AACD;AACD,QAAI,OAAOC,MAAMD,GAAN,CAAP,KAAsB,QAA1B,EAAoC;AAClC,aAAOC,MAAMD,GAAN,EAAWE,EAAlB;AACD;;AAED,WAAO,IAAP;AACD,GAVwB;AAAA,CAA3B;;AAaA,MAAMC,yBAAyBJ,mBAAmB,MAAnB,CAA/B;AACA,MAAMK,4BAA4BL,mBAAmB,SAAnB,CAAlC;;kBAEe,gCAACM,GAAD,EAAWJ,KAAX,EAA0C;AAAA,UAAzCI,GAAyC;;AAAA,UAA/BJ,KAA+B;;AAAA;AACvD,UAAMK,MAAMC,OAAOC,MAAP,4BAAZ;;AAEAD,WAAOE,MAAP,CAAcH,GAAd,EAAmB;AACjBD,SADiB;AAEjBK,WAAKL,IAAIK,GAFQ;AAGjBC,iBAAWN,IAAIM,SAHE;AAIjBC,YAAMP,IAAIO,IAJO;AAKjBX,WALiB;AAMjBY,cAAQV,uBAAuBF,KAAvB,CANS;AAOjBa,iBAAWV,0BAA0BH,KAA1B;AAPM,KAAnB;;AAUAK,QAAIS,MAAJ,GAAa,gCAAW,KAAX,CAAb;AACAT,QAAIS,MAAJ,CAAWC,UAAX,CAAsB;AACpBJ,YAAMP,IAAIO,IADU;AAEpBK,YAAMX,IAAIW,IAAJ,IAAYX,IAAIW,IAAJ,CAASC,IAFP;AAGpBC,YAAMlB,MAAMkB;AAHQ,KAAtB;;AAMA,WAAOb,GAAP;AApBuD;AAqBxD,C","file":"createContextFromEvent.js","sourcesContent":["import Logger from 'nightingale-logger/src';\nimport Bot from './Bot';\nimport contextPrototype from './contextPrototype';\nimport type { ContextType } from './types';\n\nconst extractIdFromEvent = (key: string) => (\n  (event: Object) => {\n    if (typeof event[key] === 'string') {\n      return event[key];\n    }\n    if (typeof event[key] === 'object') {\n      return event[key].id;\n    }\n\n    return null;\n  }\n);\n\nconst extrackUserIdFromEvent = extractIdFromEvent('user');\nconst extrackChannelIdFromEvent = extractIdFromEvent('channel');\n\nexport default (bot: Bot, event: Object): ContextType => {\n  const ctx = Object.create(contextPrototype);\n\n  Object.assign(ctx, {\n    bot,\n    rtm: bot.rtm,\n    webClient: bot.webClient,\n    team: bot.team,\n    event,\n    userId: extrackUserIdFromEvent(event),\n    channelId: extrackChannelIdFromEvent(event),\n  });\n\n  ctx.logger = new Logger('bot');\n  ctx.logger.setContext({\n    team: bot.team,\n    user: ctx.user && ctx.user.name,\n    text: event.text,\n  });\n\n  return ctx;\n};\n"]}