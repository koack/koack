{"version":3,"sources":["../../src/pool/index.js"],"names":["logger","PoolOptionsType","size","path","Pool","constructor","options","processNextId","processes","Set","teamsToProcess","Map","Object","assign","start","iterator","info","item","installInfo","addTeam","team","sendBotMessage","teamId","data","process","get","warn","sendMessage","close","forEach","kill"],"mappings":";;;;;;;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,SAAS,0BAAW,YAAX,CAAf;;MAEKC,e;AACHC,M;AACAC,M;;;;;;AAGa,MAAMC,IAAN,CAAW;;AAOxBC,cAAYC,OAAZ,EAAsC;AAAA,YAA1BA,OAA0B,EAAjBL,eAAiB;;AAAA,SAJtCM,aAIsC,GAJtB,CAIsB;AAAA,SAHtCC,SAGsC,GAH1B,IAAIC,GAAJ,EAG0B;AAAA,SAFtCC,cAEsC,GAFrB,IAAIC,GAAJ,EAEqB;;AACpCC,WAAOC,MAAP,CAAc,IAAd,EAAoBP,OAApB;AACD;;AAEKQ,OAAN,CAAYC,QAAZ,EAAsB;AAAA;;AAAA;AACpBf,aAAOgB,IAAP,CAAY,wBAAZ;;AAEA;AACA,WAAK,MAAMC,IAAX,IAAmBF,QAAnB,EAA6B;AAC3B,cAAMG,cAAc,MAAMD,IAA1B;AACA,cAAM,+BAAeC,WAAf,CAAN;AACD;AAPmB;AAQrB;;AAEDC,UAAQC,IAAR,EAAwB;AAAA,YAAhBA,IAAgB;;AACtB,4BAAS,IAAT,EAAeA,IAAf;AACD;;AAEDC,iBAAeC,MAAf,EAA+BC,IAA/B,EAA6C;AAAA,YAA9BD,MAA8B;;AAAA,YAAdC,IAAc;;AAC3C,UAAMC,UAAU,KAAKd,cAAL,CAAoBe,GAApB,CAAwBH,MAAxB,CAAhB;AACA,QAAI,CAACE,OAAL,EAAc;AACZxB,aAAO0B,IAAP,CAAY,SAAZ,EAAuB,EAAEJ,MAAF,EAAvB;AACA;AACD;AACDE,YAAQG,WAAR,CAAoBL,MAApB,EAA4BC,IAA5B;AACD;;AAEDK,UAAQ;AACN,SAAKpB,SAAL,CAAeqB,OAAf,CAAuBL,WAAWA,QAAQM,IAAR,EAAlC;AACD;AApCuB;kBAAL1B,I","file":"index.js","sourcesContent":["/* @flow */\nimport Logger from 'nightingale/src';\nimport startBot from './startBot';\nimport type { TeamType } from '../types/';\n\nconst logger = new Logger('koack:pool');\n\ntype PoolOptionsType = {|\n  size: number,\n  path: string,\n|};\n\nexport default class Pool {\n  size: number;\n  path: string;\n  processNextId = 1;\n  processes = new Set();\n  teamsToProcess = new Map();\n\n  constructor(options: PoolOptionsType) {\n    Object.assign(this, options);\n  }\n\n  async start(iterator) {\n    logger.info('bot server is starting');\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const item of iterator) {\n      const installInfo = await item;\n      await startBot(this, installInfo);\n    }\n  }\n\n  addTeam(team: TeamType) {\n    startBot(this, team);\n  }\n\n  sendBotMessage(teamId: number, data: Object) {\n    const process = this.teamsToProcess.get(teamId);\n    if (!process) {\n      logger.warn('No team', { teamId });\n      return;\n    }\n    process.sendMessage(teamId, data);\n  }\n\n  close() {\n    this.processes.forEach(process => process.kill());\n  }\n}\n"]}