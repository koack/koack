{"version":3,"file":"index-node8.cjs.js","sources":["../src/createActionHandlersMap.ts","../src/index.ts"],"sourcesContent":["import compose from 'koa-compose';\nimport Logger from 'nightingale-logger';\nimport { Action } from './types';\n\nconst logger = new Logger('koack:message-router:actions');\n\nexport interface ActionHandlers {\n  commands: Map<string, Action>;\n  regexps: Array<Action>;\n}\n\nexport interface ActionsMap {\n  dm: ActionHandlers;\n  channel: ActionHandlers;\n  group: ActionHandlers;\n}\n\nexport default (actions: Array<Action>): ActionsMap => {\n  const map: ActionsMap = {\n    dm: { commands: new Map(), regexps: [] },\n    channel: { commands: new Map(), regexps: [] },\n    group: { commands: new Map(), regexps: [] },\n  };\n\n  actions.forEach((action: Action) => {\n    if (!action.where) action.where = ['dm', 'channel', 'group'];\n    if (!action.mention) action.mention = action.where.filter(v => v !== 'dm');\n    if (!action.handler) action.handler = compose(action.middlewares);\n    if (action.stop !== false) action.stop = true;\n\n    action.where.forEach(where => {\n      const commands: Map<string, Action> = map[where].commands;\n      const regexps: Array<Action> = map[where].regexps;\n\n      if (action.commands) {\n        action.commands.forEach((command: string) => {\n          if (commands.has(command) && commands.get(command) !== action) {\n            logger.warn('override action', { command });\n          }\n\n          commands.set(command, action);\n        });\n      }\n\n      if (action.regexp || !action.commands) {\n        regexps.push(action);\n      }\n    });\n  });\n\n  return map;\n};\n","import { Action, Message } from './types';\nimport createActionHandlersMap from './createActionHandlersMap';\n\nconst handle = (ctx, extendsContext: Object, message: Message, action: Action) => {\n  const messageCtx = Object.create(ctx);\n\n  Object.assign(messageCtx, {\n    message,\n    ...extendsContext,\n    logger: ctx.logger.context({\n      ...ctx.logger._context,\n      message,\n    }),\n  });\n\n  action.handler(messageCtx);\n};\n\nconst canCommandHandleWithMention = (\n  hasMention: boolean,\n  command,\n  destinationType: ChannelType,\n) => {\n  if (!hasMention) {\n    if (command.mention === false) return true;\n    if (command.mention.includes(destinationType)) return false;\n  } else {\n    // if hasMention\n    // eslint-disable-next-line no-lonely-if\n    if (command.mention === false) return false;\n  }\n  return true;\n};\n\nexport default (actions: Array<Action>) => {\n  const mentionOnly = actions.every(action => action.mention === true);\n  const map = createActionHandlersMap(actions);\n\n  return (ctx, next) => {\n    if (!ctx.event.text || ctx.userId === ctx.rtm.activeUserId) return;\n\n    const botMention = `<@${ctx.rtm.activeUserId}>`;\n\n    const { ts, text: originalText, type: messageType, subtype: messageSubtype } = ctx.event;\n    const { teamId, userId, channelId } = ctx;\n    const destinationType = ctx.getChannelType();\n    let text = originalText;\n\n    ctx.logger.debug('message', { ts, destinationType, text, messageType, messageSubtype });\n    if (!destinationType) {\n      ctx.logger.warn('Unsupported destination type', { destinationType });\n      return next();\n    }\n\n    const startsWithMention = text.startsWith(botMention);\n    const hasMention = startsWithMention || text.includes(botMention);\n\n    if (mentionOnly && !hasMention) {\n      return next();\n    }\n\n    const message: Message = { ts, text: originalText, teamId, userId, channelId };\n\n    // Clean text\n    // Remove mention\n    if (startsWithMention) {\n      text = text.substr(botMention.length);\n    }\n\n    // remove `:` (`@bot: do something !`)\n    text = text.trim().replace(/^[\\s:]*(?!\\w)\\s*/, '');\n\n    // try to find a command\n    const command = text.split(' ', 2)[0].toLowerCase();\n    const actionCommand = command && map[destinationType].commands.get(command);\n\n    if (actionCommand && canCommandHandleWithMention(hasMention, actionCommand, destinationType)) {\n      text = text.substr(command.length).replace(/^[\\s:]*(?!\\w)\\s*/, '');\n\n      ctx.logger.debug('actionCommand', { command, text });\n\n      handle(ctx, { text }, message, actionCommand);\n\n      if (actionCommand.stop) {\n        return;\n      }\n    }\n\n    // try to find a matching regexp\n    if (\n      map[destinationType].regexps.some(action => {\n        if (!canCommandHandleWithMention(hasMention, action, destinationType)) return false;\n\n        const match = !action.regexp ? true : text.match(action.regexp);\n        if (!match) return false;\n\n        ctx.logger.debug('actionRegexp', { text, match });\n        handle(ctx, { text, match }, message, action);\n\n        return action.stop;\n      })\n    ) {\n      return;\n    }\n\n    // Could not find anything\n    return next();\n  };\n};\n"],"names":["logger","Logger","actions","map","Map","forEach","action","where","mention","filter","v","handler","compose","middlewares","stop","commands","regexps","command","has","get","warn","set","regexp","push","handle","ctx","extendsContext","message","messageCtx","Object","create","assign","context","_context","canCommandHandleWithMention","hasMention","destinationType","includes","mentionOnly","every","createActionHandlersMap","next","event","text","userId","rtm","activeUserId","botMention","originalText","messageType","messageSubtype","getChannelType","debug","startsWithMention","startsWith","substr","length","trim","replace","split","toLowerCase","actionCommand","some","match"],"mappings":";;;;;;;;;AAIA,MAAMA,SAAS,IAAIC,MAAJ,CAAW,8BAAX,CAAf;AAaA,+BAAgBC,OAAD,IAAwC;QAC/CC,MAAkB;QAClB;gBAAY,IAAIC,GAAJ,EAAZ;eAAgC;KADd;aAEb;gBAAY,IAAIA,GAAJ,EAAZ;eAAgC;KAFnB;WAGf;gBAAY,IAAIA,GAAJ,EAAZ;eAAgC;;GAHzC;UAMQC,OAAR,CAAiBC,MAAD,IAAoB;QAC9B,CAACA,OAAOC,KAAZ,EAAmBD,OAAOC,KAAP,GAAe,CAAC,IAAD,EAAO,SAAP,EAAkB,OAAlB,CAAf;QACf,CAACD,OAAOE,OAAZ,EAAqBF,OAAOE,OAAP,GAAiBF,OAAOC,KAAP,CAAaE,MAAb,CAAoBC,KAAKA,MAAM,IAA/B,CAAjB;QACjB,CAACJ,OAAOK,OAAZ,EAAqBL,OAAOK,OAAP,GAAiBC,QAAQN,OAAOO,WAAf,CAAjB;QACjBP,OAAOQ,IAAP,KAAgB,KAApB,EAA2BR,OAAOQ,IAAP,GAAc,IAAd;WAEpBP,KAAP,CAAaF,OAAb,CAAqBE,SAAS;YACtBQ,WAAgCZ,IAAII,KAAJ,EAAWQ,QAAjD;YACMC,UAAyBb,IAAII,KAAJ,EAAWS,OAA1C;;UAEIV,OAAOS,QAAX,EAAqB;eACZA,QAAP,CAAgBV,OAAhB,CAAyBY,OAAD,IAAqB;cACvCF,SAASG,GAAT,CAAaD,OAAb,KAAyBF,SAASI,GAAT,CAAaF,OAAb,MAA0BX,MAAvD,EAA+D;mBACtDc,IAAP,CAAY,iBAAZ,EAA+B;;aAA/B;;;mBAGOC,GAAT,CAAaJ,OAAb,EAAsBX,MAAtB;SALF;;;UASEA,OAAOgB,MAAP,IAAiB,CAAChB,OAAOS,QAA7B,EAAuC;gBAC7BQ,IAAR,CAAajB,MAAb;;KAfJ;GANF;SA0BOH,GAAP;CAjCF;;ACdA,MAAMqB,SAAS,CAACC,GAAD,EAAMC,cAAN,EAA8BC,OAA9B,EAAgDrB,MAAhD,KAAmE;QAC1EsB,aAAaC,OAAOC,MAAP,CAAcL,GAAd,CAAnB;SAEOM,MAAP,CAAcH,UAAd,EAA0B;WAAA;OAErBF,cAFqB;YAGhBD,IAAIzB,MAAJ,CAAWgC,OAAX,CAAmB,EACzB,GAAGP,IAAIzB,MAAJ,CAAWiC,QADW;;KAAnB;GAHV;SASOtB,OAAP,CAAeiB,UAAf;CAZF;;AAeA,MAAMM,8BAA8B,CAClCC,UADkC,EAElClB,OAFkC,EAGlCmB,eAHkC,KAI/B;MACC,CAACD,UAAL,EAAiB;QACXlB,QAAQT,OAAR,KAAoB,KAAxB,EAA+B,OAAO,IAAP;QAC3BS,QAAQT,OAAR,CAAgB6B,QAAhB,CAAyBD,eAAzB,CAAJ,EAA+C,OAAO,KAAP;GAFjD,MAGO;;;QAGDnB,QAAQT,OAAR,KAAoB,KAAxB,EAA+B,OAAO,KAAP;;;SAE1B,IAAP;CAbF;;AAgBA,aAAgBN,OAAD,IAA4B;QACnCoC,cAAcpC,QAAQqC,KAAR,CAAcjC,UAAUA,OAAOE,OAAP,KAAmB,IAA3C,CAApB;QACML,MAAMqC,wBAAwBtC,OAAxB,CAAZ;SAEO,CAACuB,GAAD,EAAMgB,IAAN,KAAe;QAChB,CAAChB,IAAIiB,KAAJ,CAAUC,IAAX,IAAmBlB,IAAImB,MAAJ,KAAenB,IAAIoB,GAAJ,CAAQC,YAA9C,EAA4D;UAEtDC,aAAc,KAAItB,IAAIoB,GAAJ,CAAQC,YAAa,GAA7C;UAEM;QAAA;YAAYE,YAAZ;YAAgCC,WAAhC;eAAsDC;QAAmBzB,IAAIiB,KAAnF;UACM;YAAA;YAAA;;QAAgCjB,GAAtC;UACMW,kBAAkBX,IAAI0B,cAAJ,EAAxB;QACIR,OAAOK,YAAX;QAEIhD,MAAJ,CAAWoD,KAAX,CAAiB,SAAjB,EAA4B;QAAA;qBAAA;UAAA;iBAAA;;KAA5B;;QACI,CAAChB,eAAL,EAAsB;UAChBpC,MAAJ,CAAWoB,IAAX,CAAgB,8BAAhB,EAAgD;;OAAhD;aACOqB,MAAP;;;UAGIY,oBAAoBV,KAAKW,UAAL,CAAgBP,UAAhB,CAA1B;UACMZ,aAAakB,qBAAqBV,KAAKN,QAAL,CAAcU,UAAd,CAAxC;;QAEIT,eAAe,CAACH,UAApB,EAAgC;aACvBM,MAAP;;;UAGId,UAAmB;QAAA;YAAYqB,YAAZ;YAAA;YAAA;;KAAzB,CAvBoB;;;QA2BhBK,iBAAJ,EAAuB;aACdV,KAAKY,MAAL,CAAYR,WAAWS,MAAvB,CAAP;KA5BkB;;;WAgCbb,KAAKc,IAAL,GAAYC,OAAZ,CAAoB,kBAApB,EAAwC,EAAxC,CAAP,CAhCoB;;UAmCdzC,UAAU0B,KAAKgB,KAAL,CAAW,GAAX,EAAgB,CAAhB,EAAmB,CAAnB,EAAsBC,WAAtB,EAAhB;UACMC,gBAAgB5C,WAAWd,IAAIiC,eAAJ,EAAqBrB,QAArB,CAA8BI,GAA9B,CAAkCF,OAAlC,CAAjC;;QAEI4C,iBAAiB3B,4BAA4BC,UAA5B,EAAwC0B,aAAxC,EAAuDzB,eAAvD,CAArB,EAA8F;aACrFO,KAAKY,MAAL,CAAYtC,QAAQuC,MAApB,EAA4BE,OAA5B,CAAoC,kBAApC,EAAwD,EAAxD,CAAP;UAEI1D,MAAJ,CAAWoD,KAAX,CAAiB,eAAjB,EAAkC;eAAA;;OAAlC;aAEO3B,GAAP,EAAY;;OAAZ,EAAsBE,OAAtB,EAA+BkC,aAA/B;;UAEIA,cAAc/C,IAAlB,EAAwB;;;KA7CN;;;QAoDlBX,IAAIiC,eAAJ,EAAqBpB,OAArB,CAA6B8C,IAA7B,CAAkCxD,UAAU;UACtC,CAAC4B,4BAA4BC,UAA5B,EAAwC7B,MAAxC,EAAgD8B,eAAhD,CAAL,EAAuE,OAAO,KAAP;YAEjE2B,QAAQ,CAACzD,OAAOgB,MAAR,GAAiB,IAAjB,GAAwBqB,KAAKoB,KAAL,CAAWzD,OAAOgB,MAAlB,CAAtC;UACI,CAACyC,KAAL,EAAY,OAAO,KAAP;UAER/D,MAAJ,CAAWoD,KAAX,CAAiB,cAAjB,EAAiC;YAAA;;OAAjC;aACO3B,GAAP,EAAY;YAAA;;OAAZ,EAA6BE,OAA7B,EAAsCrB,MAAtC;aAEOA,OAAOQ,IAAd;KATF,CADF,EAYE;;KA/DkB;;;WAoEb2B,MAAP;GApEF;CAJF;;;;"}