{"version":3,"file":"index-node8-dev.cjs.js","sources":["../src/createActionHandlersMap.ts","../src/index.ts"],"sourcesContent":["import compose from 'koa-compose';\nimport Logger from 'nightingale-logger';\nimport { Action } from './types';\n\nconst logger = new Logger('koack:message-router:actions');\n\nexport interface ActionHandlers {\n  commands: Map<string, Action>;\n  regexps: Array<Action>;\n}\n\nexport interface ActionsMap {\n  dm: ActionHandlers;\n  channel: ActionHandlers;\n  group: ActionHandlers;\n}\n\nexport default (actions: Array<Action>): ActionsMap => {\n  const map: ActionsMap = {\n    dm: { commands: new Map(), regexps: [] },\n    channel: { commands: new Map(), regexps: [] },\n    group: { commands: new Map(), regexps: [] },\n  };\n\n  actions.forEach((action: Action) => {\n    if (!action.where) action.where = ['dm', 'channel', 'group'];\n    if (!action.mention) action.mention = action.where.filter(v => v !== 'dm');\n    if (!action.handler) action.handler = compose(action.middlewares);\n    if (action.stop !== false) action.stop = true;\n\n    action.where.forEach(where => {\n      const commands: Map<string, Action> = map[where].commands;\n      const regexps: Array<Action> = map[where].regexps;\n\n      if (action.commands) {\n        action.commands.forEach((command: string) => {\n          if (commands.has(command) && commands.get(command) !== action) {\n            logger.warn('override action', { command });\n          }\n\n          commands.set(command, action);\n        });\n      }\n\n      if (action.regexp || !action.commands) {\n        regexps.push(action);\n      }\n    });\n  });\n\n  return map;\n};\n","import { Action, Message } from './types';\nimport createActionHandlersMap from './createActionHandlersMap';\n\nconst handle = (ctx, extendsContext: Object, message: Message, action: Action) => {\n  const messageCtx = Object.create(ctx);\n\n  Object.assign(messageCtx, {\n    message,\n    ...extendsContext,\n    logger: ctx.logger.context({\n      ...ctx.logger._context,\n      message,\n    }),\n  });\n\n  action.handler(messageCtx);\n};\n\nconst canCommandHandleWithMention = (\n  hasMention: boolean,\n  command,\n  destinationType: ChannelType,\n) => {\n  if (!hasMention) {\n    if (command.mention === false) return true;\n    if (command.mention.includes(destinationType)) return false;\n  } else {\n    // if hasMention\n    // eslint-disable-next-line no-lonely-if\n    if (command.mention === false) return false;\n  }\n  return true;\n};\n\nexport default (actions: Array<Action>) => {\n  const mentionOnly = actions.every(action => action.mention === true);\n  const map = createActionHandlersMap(actions);\n\n  return (ctx, next) => {\n    if (!ctx.event.text || ctx.userId === ctx.rtm.activeUserId) return;\n\n    const botMention = `<@${ctx.rtm.activeUserId}>`;\n\n    const { ts, text: originalText, type: messageType, subtype: messageSubtype } = ctx.event;\n    const { teamId, userId, channelId } = ctx;\n    const destinationType = ctx.getChannelType();\n    let text = originalText;\n\n    ctx.logger.debug('message', { ts, destinationType, text, messageType, messageSubtype });\n    if (!destinationType) {\n      ctx.logger.warn('Unsupported destination type', { destinationType });\n      return next();\n    }\n\n    const startsWithMention = text.startsWith(botMention);\n    const hasMention = startsWithMention || text.includes(botMention);\n\n    if (mentionOnly && !hasMention) {\n      return next();\n    }\n\n    const message: Message = { ts, text: originalText, teamId, userId, channelId };\n\n    // Clean text\n    // Remove mention\n    if (startsWithMention) {\n      text = text.substr(botMention.length);\n    }\n\n    // remove `:` (`@bot: do something !`)\n    text = text.trim().replace(/^[\\s:]*(?!\\w)\\s*/, '');\n\n    // try to find a command\n    const command = text.split(' ', 2)[0].toLowerCase();\n    const actionCommand = command && map[destinationType].commands.get(command);\n\n    if (actionCommand && canCommandHandleWithMention(hasMention, actionCommand, destinationType)) {\n      text = text.substr(command.length).replace(/^[\\s:]*(?!\\w)\\s*/, '');\n\n      ctx.logger.debug('actionCommand', { command, text });\n\n      handle(ctx, { text }, message, actionCommand);\n\n      if (actionCommand.stop) {\n        return;\n      }\n    }\n\n    // try to find a matching regexp\n    if (\n      map[destinationType].regexps.some(action => {\n        if (!canCommandHandleWithMention(hasMention, action, destinationType)) return false;\n\n        const match = !action.regexp ? true : text.match(action.regexp);\n        if (!match) return false;\n\n        ctx.logger.debug('actionRegexp', { text, match });\n        handle(ctx, { text, match }, message, action);\n\n        return action.stop;\n      })\n    ) {\n      return;\n    }\n\n    // Could not find anything\n    return next();\n  };\n};\n"],"names":["logger","Logger","actions","map","dm","commands","Map","regexps","channel","group","forEach","action","where","mention","filter","v","handler","compose","middlewares","stop","command","has","get","warn","set","regexp","push","handle","ctx","extendsContext","message","messageCtx","Object","create","assign","context","_context","canCommandHandleWithMention","hasMention","destinationType","includes","mentionOnly","every","createActionHandlersMap","next","event","text","userId","rtm","activeUserId","botMention","ts","originalText","type","messageType","subtype","messageSubtype","teamId","channelId","getChannelType","debug","startsWithMention","startsWith","substr","length","trim","replace","split","toLowerCase","actionCommand","some","match"],"mappings":"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"}