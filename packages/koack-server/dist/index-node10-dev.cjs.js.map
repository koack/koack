{"version":3,"file":"index-node10-dev.cjs.js","sources":["../src/slack/index.ts","../src/index.ts"],"sourcesContent":["import { create } from 'simple-oauth2';\nimport { InstallInfo } from 'koack-types';\n\ninterface ClientConfig {\n  clientID: string;\n  clientSecret: string;\n}\ninterface ArgsType {\n  client: ClientConfig;\n  scopes: Array<string>;\n  callbackUrl: string;\n  redirectUrl: string;\n  callback: (info: InstallInfo) => void | Promise<void>;\n}\n\nexport default ({\n  client,\n  scopes,\n  callbackUrl = '/callback',\n  redirectUrl = '/success',\n  callback,\n}: ArgsType) => {\n  const oauth2 = create({\n    client: {\n      id: client.clientID,\n      secret: client.clientSecret,\n    },\n    auth: {\n      tokenHost: 'https://slack.com',\n      tokenPath: '/api/oauth.access',\n      authorizePath: '/oauth/authorize',\n    },\n  });\n\n  return {\n    authorize: ctx => {\n      ctx.redirect(\n        oauth2.authorizationCode.authorizeURL({\n          // eslint-disable-next-line camelcase\n          redirect_uri: `${ctx.request.origin}${callbackUrl}`,\n          scope: scopes,\n          state: '<state>',\n        }),\n      );\n    },\n\n    callback: async ctx => {\n      const result = await oauth2.clientCredentials.getToken({\n        code: ctx.query.code,\n        // eslint-disable-next-line camelcase\n        redirect_uri: `${ctx.request.origin}${callbackUrl}`,\n      });\n\n      if (!result || !result.ok) {\n        ctx.body = 'Error';\n      }\n\n      const {\n        team_id: teamId,\n        team_name: teamName,\n        user_id: userId,\n        access_token: accessToken,\n        bot: { bot_user_id: botUserId, bot_access_token: botAccessToken },\n      } = result;\n\n      const installInfo: InstallInfo = {\n        date: new Date(),\n        scopes,\n        team: { id: teamId, name: teamName },\n        user: { id: userId, accessToken },\n        bot: { id: botUserId, accessToken: botAccessToken },\n      };\n\n      if (callback) await callback(installInfo);\n\n      ctx.redirect(redirectUrl);\n    },\n  };\n};\n","import Koa from 'koa';\nimport route from 'koa-route';\nimport alplisten from 'alp-listen';\nimport Pool from 'koack-pool';\n// import bodyParser from 'koa-bodyparser';\nimport { StorageType, TeamType } from 'koack-types';\nimport createSlackActions from './slack';\n\nexport interface SlackClientConfig {\n  clientID: string;\n  clientSecret: string;\n}\n\nexport interface SlackServerConfig {\n  slackClient: SlackClientConfig;\n  pool: Pool;\n  storage: StorageType;\n  scopes: Array<string>;\n  callbackUrl?: string;\n  redirectUrl?: string;\n}\n\ninterface ListenConfigType {\n  tls?: boolean;\n  socketPath?: string;\n  port?: number;\n  hostname?: string;\n}\n\nexport default class SlackServer extends Koa {\n  pool: Pool;\n  storage: StorageType;\n\n  constructor({\n    pool,\n    storage,\n    slackClient,\n    scopes,\n    callbackUrl = '/callback',\n    redirectUrl = '/success',\n  }: SlackServerConfig) {\n    super();\n    this.pool = pool;\n    this.storage = storage;\n    // this.use(bodyParser());\n\n    const slackActions = createSlackActions({\n      client: slackClient,\n      scopes,\n      callbackUrl,\n      redirectUrl,\n      callback: async installInfo => {\n        const team: TeamType = await this.storage.installedTeam(installInfo);\n        this.pool.addTeam(team);\n        this.emit('installed', installInfo);\n      },\n    });\n\n    this.registerGet('/', slackActions.authorize);\n    this.registerGet(callbackUrl, slackActions.callback);\n  }\n\n  registerGet(url: string, callback: RouterHandler) {\n    this.use(route.get(url, callback));\n  }\n\n  registerPost(url: string, callback: Function) {\n    this.use(route.post(url, callback));\n  }\n\n  listen(config: ListenConfigType, certificatesDirname?: string) {\n    this.config = new Map(Object.keys(config).map(key => [key, config[key]]));\n    alplisten(certificatesDirname)(this);\n    this.storage.forEach((team: TeamType) => this.pool.addTeam(team));\n  }\n\n  stop() {\n    return this.pool.close();\n  }\n}\n"],"names":["oauth2","create","client","clientID","clientSecret","ctx","redirect","authorizationCode","authorizeURL","request","origin","callbackUrl","scopes","result","clientCredentials","getToken","query","code","ok","body","teamId","teamName","userId","accessToken","botUserId","botAccessToken","installInfo","Date","callback","redirectUrl","SlackServer","Koa","pool","storage","slackActions","createSlackActions","slackClient","team","installedTeam","addTeam","emit","registerGet","authorize","url","use","route","get","post","config","certificatesDirname","Map","Object","keys","map","key","forEach","close"],"mappings":";;;;;;;;;;;AAeA,0BAAe,CAAC;QAAA;QAAA;gBAGA,WAHA;gBAIA,UAJA;;CAAD,KAMC;QACRA,SAASC,oBAAO;YACZ;UACFC,OAAOC,QADL;cAEED,OAAOE;KAHG;UAKd;iBACO,mBADP;iBAEO,mBAFP;qBAGW;;GARJ,CAAf;SAYO;eACMC,OAAO;UACZC,QAAJ,CACEN,OAAOO,iBAAP,CAAyBC,YAAzB,CAAsC;;sBAErB,GAAEH,IAAII,OAAJ,CAAYC,MAAO,GAAEC,WAAY,EAFd;eAG7BC,MAH6B;eAI7B;OAJT,CADF;KAFG;cAYK,MAAMP,GAAN,IAAa;YACfQ,SAAS,MAAMb,OAAOc,iBAAP,CAAyBC,QAAzB,CAAkC;cAC/CV,IAAIW,KAAJ,CAAUC,IADqC;;sBAGtC,GAAEZ,IAAII,OAAJ,CAAYC,MAAO,GAAEC,WAAY;OAH/B,CAArB;;UAMI,CAACE,MAAD,IAAW,CAACA,OAAOK,EAAvB,EAA2B;YACrBC,IAAJ,GAAW,OAAX;;;YAGI;iBACKC,MADL;mBAEOC,QAFP;iBAGKC,MAHL;sBAIUC,WAJV;aAKC;uBAAeC,SAAf;4BAA4CC;;UAC/CZ,MANJ;YAQMa,cAA2B;cACzB,IAAIC,IAAJ,EADyB;cAAA;cAGzB;cAAMP,MAAN;gBAAoBC;SAHK;cAIzB;cAAMC,MAAN;;SAJyB;aAK1B;cAAME,SAAN;uBAA8BC;;OALrC;UAQIG,QAAJ,EAAc,MAAMA,SAASF,WAAT,CAAN;UAEVpB,QAAJ,CAAauB,WAAb;;GAzCJ;CAnBF;;ACce,MAAMC,WAAN,SAA0BC,GAA1B,CAA8B;cAI/B;QAAA;WAAA;eAAA;UAAA;kBAKI,WALJ;kBAMI;GANhB,EAOsB;;SAVtBC,IAUsB;SATtBC,OASsB;SAEfD,IAAL,GAAYA,IAAZ;SACKC,OAAL,GAAeA,OAAf,CAHoB;;UAMdC,eAAeC,mBAAmB;cAC9BC,WAD8B;YAAA;iBAAA;iBAAA;gBAK5B,MAAMV,WAAN,IAAqB;cACvBW,OAAiB,MAAM,KAAKJ,OAAL,CAAaK,aAAb,CAA2BZ,WAA3B,CAA7B;aACKM,IAAL,CAAUO,OAAV,CAAkBF,IAAlB;aACKG,IAAL,CAAU,WAAV,EAAuBd,WAAvB;;KARiB,CAArB;SAYKe,WAAL,CAAiB,GAAjB,EAAsBP,aAAaQ,SAAnC;SACKD,WAAL,CAAiB9B,WAAjB,EAA8BuB,aAAaN,QAA3C;;;cAGUe,GAAZ,EAAyBf,QAAzB,EAAkD;SAC3CgB,GAAL,CAASC,MAAMC,GAAN,CAAUH,GAAV,EAAef,QAAf,CAAT;;;eAGWe,GAAb,EAA0Bf,QAA1B,EAA8C;SACvCgB,GAAL,CAASC,MAAME,IAAN,CAAWJ,GAAX,EAAgBf,QAAhB,CAAT;;;SAGKoB,MAAP,EAAiCC,mBAAjC,EAA+D;SACxDD,MAAL,GAAc,IAAIE,GAAJ,CAAQC,OAAOC,IAAP,CAAYJ,MAAZ,EAAoBK,GAApB,CAAwBC,OAAO,CAACA,GAAD,EAAMN,OAAOM,GAAP,CAAN,CAA/B,CAAR,CAAd;cACUL,mBAAV,EAA+B,IAA/B;SACKhB,OAAL,CAAasB,OAAb,CAAsBlB,IAAD,IAAoB,KAAKL,IAAL,CAAUO,OAAV,CAAkBF,IAAlB,CAAzC;;;SAGK;WACE,KAAKL,IAAL,CAAUwB,KAAV,EAAP;;;;;;;"}