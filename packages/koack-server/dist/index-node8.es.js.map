{"version":3,"file":"index-node8.es.js","sources":["../src/slack/index.ts","../src/index.ts"],"sourcesContent":["import { create } from 'simple-oauth2';\nimport { InstallInfo } from 'koack-types';\nimport { Context } from 'koa';\n\ninterface ClientConfig {\n  clientID: string;\n  clientSecret: string;\n}\ninterface ArgsType {\n  client: ClientConfig;\n  scopes: Array<string>;\n  callbackUrl: string;\n  redirectUrl: string;\n  callback: (info: InstallInfo) => void | Promise<void>;\n}\n\nexport default ({\n  client,\n  scopes,\n  callbackUrl = '/callback',\n  redirectUrl = '/success',\n  callback,\n}: ArgsType) => {\n  const oauth2 = create({\n    client: {\n      id: client.clientID,\n      secret: client.clientSecret,\n    },\n    auth: {\n      tokenHost: 'https://slack.com',\n      tokenPath: '/api/oauth.access',\n      authorizePath: '/oauth/authorize',\n    },\n  });\n\n  return {\n    authorize: (ctx: Context) => {\n      ctx.redirect(\n        oauth2.authorizationCode.authorizeURL({\n          // eslint-disable-next-line camelcase\n          redirect_uri: `${ctx.request.origin}${callbackUrl}`,\n          scope: scopes.join(' '),\n          state: '<state>',\n        }),\n      );\n    },\n\n    callback: async (ctx: Context) => {\n      const result = await oauth2.authorizationCode.getToken({\n        code: ctx.query.code,\n        // eslint-disable-next-line camelcase\n        redirect_uri: `${ctx.request.origin}${callbackUrl}`,\n      });\n\n      if (!result || !result.ok) {\n        ctx.body = 'Error';\n      }\n\n      const {\n        team_id: teamId,\n        team_name: teamName,\n        user_id: userId,\n        access_token: accessToken,\n        bot: { bot_user_id: botUserId, bot_access_token: botAccessToken },\n      } = result;\n\n      const installInfo: InstallInfo = {\n        date: new Date(),\n        scopes,\n        team: { id: teamId, name: teamName },\n        user: { id: userId, accessToken },\n        bot: { id: botUserId, accessToken: botAccessToken },\n      };\n\n      if (callback) await callback(installInfo);\n\n      ctx.redirect(redirectUrl);\n    },\n  };\n};\n","import Koa from 'koa';\nimport route from 'koa-route';\nimport alplisten from 'alp-listen';\nimport Pool from 'koack-pool';\n// import bodyParser from 'koa-bodyparser';\nimport { Storage, Team } from 'koack-types';\nimport createSlackActions from './slack';\n\nexport type Handler = (this: Koa.Context, ctx: Koa.Context, ...params: any[]) => any;\n\ntype Handler = (this: Koa.Context, ctx: Koa.Context, ...params: any[]) => any;export interface SlackClientConfig {\n  clientID: string;\n  clientSecret: string;\n}\n\nexport interface SlackServerConfig {\n  slackClient: SlackClientConfig;\n  pool: Pool;\n  storage: Storage;\n  scopes: Array<string>;\n  callbackUrl?: string;\n  redirectUrl?: string;\n}\n\ninterface ListenConfigType {\n  tls?: boolean;\n  socketPath?: string;\n  port?: number;\n  hostname?: string;\n}\n\nexport default class SlackServer extends Koa {\n  pool: Pool;\n  storage: Storage;\n\n  constructor({\n    pool,\n    storage,\n    slackClient,\n    scopes,\n    callbackUrl = '/callback',\n    redirectUrl = '/success',\n  }: SlackServerConfig) {\n    super();\n    this.pool = pool;\n    this.storage = storage;\n    // this.use(bodyParser());\n\n    const slackActions = createSlackActions({\n      client: slackClient,\n      scopes,\n      callbackUrl,\n      redirectUrl,\n      callback: async installInfo => {\n        const team: Team = await this.storage.installedTeam(installInfo);\n        this.pool.addTeam(team);\n        this.emit('installed', installInfo);\n      },\n    });\n\n    this.registerGet('/', slackActions.authorize);\n    this.registerGet(callbackUrl, slackActions.callback);\n  }\n\n  registerGet(url: string, callback: Handler) {\n    this.use(route.get(url, callback));\n  }\n\n  registerPost(url: string, callback: Handler) {\n    this.use(route.post(url, callback));\n  }\n\n  listen(config: ListenConfigType, certificatesDirname?: string) {\n    this.config = new Map(Object.keys(config).map(key => [key, config[key]]));\n    alplisten(certificatesDirname)(this);\n    this.storage.forEach((team: Team) => this.pool.addTeam(team));\n  }\n\n  stop() {\n    return this.pool.close();\n  }\n}\n"],"names":["client","scopes","callbackUrl","redirectUrl","callback","oauth2","create","id","clientID","secret","clientSecret","auth","tokenHost","tokenPath","authorizePath","authorize","ctx","redirect","authorizationCode","authorizeURL","redirect_uri","request","origin","scope","join","state","result","getToken","code","query","ok","body","team_id","teamId","team_name","teamName","user_id","userId","access_token","accessToken","bot","bot_user_id","botUserId","bot_access_token","botAccessToken","installInfo","date","Date","team","name","user","SlackServer","Koa","constructor","pool","storage","slackClient","slackActions","createSlackActions","installedTeam","addTeam","emit","registerGet","url","use","route","get","registerPost","post","listen","config","certificatesDirname","Map","Object","keys","map","key","alplisten","forEach","stop","close"],"mappings":"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"}