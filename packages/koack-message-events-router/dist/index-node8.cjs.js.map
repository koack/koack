{"version":3,"file":"index-node8.cjs.js","sources":["../src/createEventHandlersMap.ts","../src/index.ts"],"sourcesContent":["import compose from 'koa-compose';\nimport { WhereType } from 'koack-types';\nimport { CallbackEventHandler, EventHandler, MiddlewaresEventHandler } from './types';\n\nexport interface EventHandlerMap {\n  [key: string]: Map<string, CallbackEventHandler>;\n}\n\nexport default (actions: Array<EventHandler>): EventHandlerMap => {\n  const map: EventHandlerMap = {\n    dm: new Map(),\n    channel: new Map(),\n    group: new Map(),\n  };\n\n  actions.forEach((eventHandler: EventHandler) => {\n    if (!eventHandler.where) eventHandler.where = ['dm', 'channel', 'group'];\n    if (eventHandler.handler === undefined) {\n      (eventHandler as CallbackEventHandler).handler = compose(\n        (eventHandler as MiddlewaresEventHandler).middlewares,\n      );\n    }\n\n    eventHandler.where.forEach((where: WhereType) => {\n      eventHandler.events.forEach((eventName: string) => {\n        if (map[where].has(eventName)) throw new Error(`event redefined: \"${eventName}\"`);\n        map[where].set(eventName, eventHandler as CallbackEventHandler);\n      });\n    });\n  });\n\n  return map;\n};\n","import Logger from 'nightingale-logger';\nimport { BotContext } from 'koack-bot/src/types';\nimport { CallbackEventHandler, EventHandler, MessageEvent, MessageContext } from './types';\nimport createEventHandlersMap from './createEventHandlersMap';\n\nconst logger = new Logger('koack:message-events-router');\n\nconst handle = (\n  ctx: BotContext,\n  messageEvent: MessageEvent,\n  eventHandler: CallbackEventHandler,\n) => {\n  const messageCtx: MessageContext = Object.create(ctx);\n\n  Object.assign(messageCtx, {\n    messageEvent,\n    logger: ctx.logger.context({\n      ...ctx.logger.getContextObject(),\n      messageEvent,\n    }),\n  });\n\n  eventHandler.handler(messageCtx);\n};\n\nexport default (actions: Array<EventHandler>) => {\n  const map = createEventHandlersMap(actions);\n\n  return (ctx, next) => {\n    const { ts, subtype: messageType } = ctx.event;\n    if (!messageType) return next();\n\n    const { teamId, userId, channelId } = ctx;\n    const destinationType = ctx.getChannelType();\n\n    logger.debug('message event', { ts, destinationType, messageType });\n    if (!destinationType) {\n      logger.warn('Unsupported destination type', { destinationType });\n      return next();\n    }\n\n    const eventHandler = map[destinationType].get(messageType);\n    if (!eventHandler) return next();\n\n    const messageEvent: MessageEvent = { ts, teamId, userId, channelId };\n\n    handle(ctx, messageEvent, eventHandler);\n  };\n};\n"],"names":["actions","map","Map","forEach","eventHandler","where","handler","undefined","compose","middlewares","events","eventName","has","Error","set","logger","Logger","handle","ctx","messageEvent","messageCtx","Object","create","assign","context","getContextObject","createEventHandlersMap","next","messageType","event","destinationType","getChannelType","debug","warn","get"],"mappings":";;;;;;;;;AAQA,8BAAgBA,OAAD,IAAmD;QAC1DC,MAAuB;QACvB,IAAIC,GAAJ,EADuB;aAElB,IAAIA,GAAJ,EAFkB;WAGpB,IAAIA,GAAJ;GAHT;UAMQC,OAAR,CAAiBC,YAAD,IAAgC;QAC1C,CAACA,aAAaC,KAAlB,EAAyBD,aAAaC,KAAb,GAAqB,CAAC,IAAD,EAAO,SAAP,EAAkB,OAAlB,CAArB;;QACrBD,aAAaE,OAAb,KAAyBC,SAA7B,EAAwC;kBACtC,CAAuCD,OAAvC,GAAiDE,QAC9CJ,YAAD,CAA0CK,WADK,CAAjD;;;iBAKWJ,KAAb,CAAmBF,OAAnB,CAA4BE,KAAD,IAAsB;mBAClCK,MAAb,CAAoBP,OAApB,CAA6BQ,SAAD,IAAuB;YAC7CV,IAAII,KAAJ,EAAWO,GAAX,CAAeD,SAAf,CAAJ,EAA+B,MAAM,IAAIE,KAAJ,CAAW,qBAAoBF,SAAU,GAAzC,CAAN;YAC3BN,KAAJ,EAAWS,GAAX,CAAeH,SAAf,EAA0BP,YAA1B;OAFF;KADF;GARF;SAgBOH,GAAP;CAvBF;;ACHA,MAAMc,SAAS,IAAIC,MAAJ,CAAW,6BAAX,CAAf;;AAEA,MAAMC,SAAS,CACbC,GADa,EAEbC,YAFa,EAGbf,YAHa,KAIV;QACGgB,aAA6BC,OAAOC,MAAP,CAAcJ,GAAd,CAAnC;SAEOK,MAAP,CAAcH,UAAd,EAA0B;gBAAA;YAEhBF,IAAIH,MAAJ,CAAWS,OAAX,CAAmB,EACzB,GAAGN,IAAIH,MAAJ,CAAWU,gBAAX,EADsB;;KAAnB;GAFV;eAQanB,OAAb,CAAqBc,UAArB;CAfF;;AAkBA,aAAgBpB,OAAD,IAAkC;QACzCC,MAAMyB,uBAAuB1B,OAAvB,CAAZ;SAEO,CAACkB,GAAD,EAAMS,IAAN,KAAe;UACd;QAAA;eAAeC;QAAgBV,IAAIW,KAAzC;QACI,CAACD,WAAL,EAAkB,OAAOD,MAAP;UAEZ;YAAA;YAAA;;QAAgCT,GAAtC;UACMY,kBAAkBZ,IAAIa,cAAJ,EAAxB;WAEOC,KAAP,CAAa,eAAb,EAA8B;QAAA;qBAAA;;KAA9B;;QACI,CAACF,eAAL,EAAsB;aACbG,IAAP,CAAY,8BAAZ,EAA4C;;OAA5C;aACON,MAAP;;;UAGIvB,eAAeH,IAAI6B,eAAJ,EAAqBI,GAArB,CAAyBN,WAAzB,CAArB;QACI,CAACxB,YAAL,EAAmB,OAAOuB,MAAP;WAIZT,GAAP,EAFmC;QAAA;YAAA;YAAA;;KAEnC,EAA0Bd,YAA1B;GAlBF;CAHF;;;;"}