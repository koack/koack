{"version":3,"sources":["../../src/pool/index.js"],"names":["Logger","startBot","TeamType","Process","logger","Pool","constructor","options","processNextId","teamsToProcess","Map","Object","assign","addTeam","team","sendBotMessage","teamId","data","process","get","warn","sendMessage","close","clear","promises","Array","from","processes","map","kill","Promise","all","Set"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAOA,MAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAcC,qBAAd,QAA8B,WAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AAEA,MAAMC,SAAS,IAAIJ,MAAJ,CAAW,YAAX,CAAf;;AAEA,kDAAuB,cACrB,mBAAM,UAAN,CADqB,EAErB,mBAAM,UAAN,CAFqB,CAAvB;IAKqBK,I,sBACf,U,sBACA,U;SAEK,aAAM,cAAN,C;cAJI,MAAW;;AAOxBC,cAAYC,OAAZ,EAAsC;AAAA;;AAAA;;AAAA,SAJtCC,aAIsC,GAJtB,CAIsB;;AAAA;;AAAA,SAFtCC,cAEsC,GAFrB,IAAIC,GAAJ,EAEqB;AAAA,uBAAnB,eAAmB;;AACpCC,WAAOC,MAAP,CAAc,IAAd,EAAoBL,OAApB;AACD;;AAEDM,UAAQC,IAAR,EAAwB;AAAA,oBAAZ,eAAY;;AAAA;;AACtBb,aAAS,IAAT,EAAea,IAAf;AACD;;AAEDC,iBAAeC,MAAf,EAA+BC,IAA/B,EAA6C;AAAA,sBAAxB,UAAwB;;AAAA,oBAAV,UAAU;;AAAA;AAAA;;AAC3C,UAAMC,UAAU,KAAKT,cAAL,CAAoBU,GAApB,CAAwBH,MAAxB,CAAhB;AACA,QAAI,CAACE,OAAL,EAAc;AACZd,aAAOgB,IAAP,CAAY,SAAZ,EAAuB,EAAEJ,MAAF,EAAvB;AACA;AACD;AACDE,YAAQG,WAAR,CAAoBL,MAApB,EAA4BC,IAA5B;AACD;;AAEDK,UAAQ;AACN,WAAO,KAAKC,KAAL,EAAP;AACD;;AAEDA,UAAQ;AACN,UAAMC,WAAWC,MAAMC,IAAN,CAAW,KAAKC,SAAhB,EAA2BC,GAA3B,CAA+BV,WAAWA,QAAQW,IAAR,EAA1C,CAAjB;AACA,SAAKF,SAAL,CAAeJ,KAAf;AACA,SAAKd,cAAL,CAAoBc,KAApB;AACA,SAAKf,aAAL,GAAqB,CAArB;AACA,WAAOsB,QAAQC,GAAR,CAAYP,QAAZ,CAAP;AACD;AAlCuB,C;;;;;;;;;WAIE,IAAIQ,GAAJ,E;;;SAJP3B,I","file":"index.js","sourcesContent":["/* @flow */\nimport Logger from 'nightingale/src';\nimport startBot from './startBot';\nimport type { TeamType } from '../types/';\nimport Process from './Process';\n\nconst logger = new Logger('koack:pool');\n\ntype PoolOptionsType = {|\n  size: number,\n  path: string,\n|};\n\nexport default class Pool {\n  size: number;\n  path: string;\n  processNextId = 1;\n  processes: Set<Process> = new Set();\n  teamsToProcess = new Map();\n\n  constructor(options: PoolOptionsType) {\n    Object.assign(this, options);\n  }\n\n  addTeam(team: TeamType) {\n    startBot(this, team);\n  }\n\n  sendBotMessage(teamId: number, data: Object) {\n    const process = this.teamsToProcess.get(teamId);\n    if (!process) {\n      logger.warn('No team', { teamId });\n      return;\n    }\n    process.sendMessage(teamId, data);\n  }\n\n  close() {\n    return this.clear();\n  }\n\n  clear() {\n    const promises = Array.from(this.processes).map(process => process.kill());\n    this.processes.clear();\n    this.teamsToProcess.clear();\n    this.processNextId = 1;\n    return Promise.all(promises);\n  }\n}\n"]}