{"version":3,"sources":["../../src/pool/bot-process.js"],"names":["Logger","createBot","Bot","TeamType","logger","Number","process","argv","require","default","setContext","id","Map","on","message","error","type","team","Error","bot","teams","set","initBot","teamId","has","warn","get","close"],"mappings":"AACA,OAAO,yBAAP;AACA,OAAOA,MAAP;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAYC,IAAZ,MAAqB,YAArB;AACA,SAAcC,qBAAd,QAA8B,UAA9B;;;;;AAEA,MAAMC,SAAS,IAAIJ,MAAJ,CAAW,YAAX,CAAf;;AAEA,WAAQ,UAAR,QAAmBK,OAAOC,QAAQC,IAAR,CAAa,CAAb,CAAP,CAAnB;AACA;AACA,gBAAa,YAAb,QAA0BC,QAAQF,QAAQC,IAAR,CAAa,CAAb,CAAR,EAAyBE,OAAnD;;AAEAL,OAAOM,UAAP,CAAkB,EAAEC,EAAF,EAAlB;;AAEA,cAAW,aAAM,OAAN,EAAW,UAAX,CAAX,QAA6B,IAAIC,GAAJ,EAA7B;;AAEAN,QAAQO,EAAR,CAAW,SAAX,EAAsBC,WAAW;AAC/B,MAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC/BV,WAAOW,KAAP,CAAa,oBAAb,EAAmCD,OAAnC;AACD;;AAED,UAAQA,QAAQE,IAAhB;AACE,SAAK,OAAL;AAAc;AACZ,cAAM,EAAEC,IAAF,KAAQ,SAAI,mBAAM,eAAN,CAAJ,CAAR,QAA+BH,OAA/B,CAAN;AACA,YAAI,CAACG,KAAKN,EAAV,EAAc,MAAM,IAAIO,KAAJ,CAAU,iBAAV,CAAN;;AAEd,cAAMC,MAAMlB,UAAUgB,IAAV,CAAZ;AACAG,cAAMC,GAAN,CAAUJ,KAAKN,EAAf,EAAmBQ,GAAnB;AACAG,gBAAQH,GAAR;;AAEA;AACD;;AAED,SAAK,QAAL;AAAe;AACb,cAAM,EAAEI,MAAF,KAAU,SAAI,qBAAQ,UAAR,CAAJ,CAAV,QAAiCT,OAAjC,CAAN;AACA,YAAI,CAACM,MAAMI,GAAN,CAAUD,MAAV,CAAL,EAAwB;AACtBnB,iBAAOqB,IAAP,CAAY,oBAAZ,EAAkC,EAAEF,MAAF,EAAlC;AACA;AACD;;AAED,oBAAS,UAAT,QAAiBH,MAAMM,GAAN,CAAUH,MAAV,CAAjB;AACAJ,YAAIQ,KAAJ;AACA;AACD;;AAED;AAAS;AACPvB,eAAOqB,IAAP,CAAY,qBAAZ,EAAmCX,OAAnC;AACD;AA1BH;AA4BD,CAjCD","file":"bot-process.js","sourcesContent":["/* @flow */\nimport 'nightingale-app-console';\nimport Logger from 'nightingale-logger/src';\nimport { createBot } from '../bot';\nimport type Bot from '../bot/Bot';\nimport type { TeamType } from '../types';\n\nconst logger = new Logger('koack:pool');\n\nconst id: number = Number(process.argv[2]);\n// eslint-disable-next-line import/no-dynamic-require\nconst initBot: Function = require(process.argv[3]).default;\n\nlogger.setContext({ id });\n\nconst teams: Map<any, Bot> = new Map();\n\nprocess.on('message', message => {\n  if (typeof message !== 'object') {\n    logger.error('Unexpected message', message);\n  }\n\n  switch (message.type) {\n    case 'start': {\n      const { team }: { team: TeamType } = message;\n      if (!team.id) throw new Error('Invalid team.id');\n\n      const bot = createBot(team);\n      teams.set(team.id, bot);\n      initBot(bot);\n\n      break;\n    }\n\n    case 'remove': {\n      const { teamId }: { teamId: string } = message;\n      if (!teams.has(teamId)) {\n        logger.warn('Unexpected team id', { teamId });\n        return;\n      }\n\n      const bot: Bot = teams.get(teamId);\n      bot.close();\n      break;\n    }\n\n    default: {\n      logger.warn('Unsupported message', message);\n    }\n  }\n});\n"]}