{"version":3,"sources":["../../../../src/bot/context/prototype/sendMessage.js"],"names":["transformAttachmentAction","action","name","text","type","value","confirm","title","ok_text","okText","dismiss_text","dismissText","transformAttachment","attachment","fallback","color","pretext","author_name","author","author_link","link","author_icon","icon","title_link","titleLink","fields","image_url","imageUrl","thumb_url","thumbUrl","footer","footer_icon","footerIcon","callback_id","callbackId","actions","map","ctx","channelId","message","options","rtm","sendMessage","webClient","chat","postMessage","parse","link_names","linkNames","attachments","unfurl_links","unfurlLinks","unfurl_media","unfurlMedia","username","bot","as_user","asUser","icon_url","iconUrl","icon_emoji","iconEmoj","thread_ts","threadTs","reply_broadcast","replyBroadcast"],"mappings":"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","file":"sendMessage.js","sourcesContent":["/* eslint-disable camelcase */\ntype ParseType = 'none' | 'full';\n\ntype AuthorType = {|\n  name: ?string,\n  link: ?string,\n  icon: ?string,\n|};\n\ntype AttachmentFieldType = {|\n  title: string,\n  value: string,\n  short: ?boolean,\n|};\n\ntype AttachmentActionConfirmType = {|\n  title: string,\n  text: string,\n  okText: string,\n  dismissText: string,\n|};\n\ntype AttachmentActionType = {|\n  name: string,\n  text: string,\n  type: string,\n  value: string,\n  confirm: ?AttachmentActionConfirmType,\n|};\n\ntype AttachmentType = {|\n  fallback: string,\n  color: ?string,\n  pretext: ?string,\n  author: ?AuthorType,\n  title: ?string,\n  titleLink: ?string,\n  text: string,\n  fields: ?Array<AttachmentFieldType>,\n  imageUrl: ?string,\n  thumbUrl: ?string,\n  footer: ?string,\n  footerIcon: ?string,\n  // interactive message\n  callbackId: ?string,\n  actions: ?Array<AttachmentActionType>,\n|};\n\nexport type SendMessageOptionsType = {|\n  parse: ?ParseType,\n  linkNames: ?boolean,\n  attachments: ?Array<AttachmentType>,\n  unfurlLinks: ?boolean,\n  unfurlMedia: ?boolean,\n  username: ?string,\n  asUser: ?boolean,\n  iconUrl: ?boolean,\n  iconEmoj: ?boolean,\n  threadTs: ?string,\n  replyBroadcast: ?boolean,\n|};\n\nconst transformAttachmentAction = (action: AttachmentActionType) => ({\n  name: action.name,\n  text: action.text,\n  type: action.type,\n  value: action.value,\n  confirm: action.confirm && ({\n    title: action.title,\n    text: action.text,\n    ok_text: action.okText,\n    dismiss_text: action.dismissText,\n  }),\n});\n\nconst transformAttachment = (attachment: AttachmentType) => ({\n  fallback: attachment.fallback,\n  color: attachment.color,\n  pretext: attachment.pretext,\n  author_name: attachment.author && attachment.author.name,\n  author_link: attachment.author && attachment.author.link,\n  author_icon: attachment.author && attachment.author.icon,\n  title: attachment.title,\n  title_link: attachment.titleLink,\n  fields: attachment.fields,\n  image_url: attachment.imageUrl,\n  thumb_url: attachment.thumbUrl,\n  footer: attachment.footer,\n  footer_icon: attachment.footerIcon,\n  // interactive message\n  callback_id: attachment.callbackId,\n  actions: attachment.actions && attachment.actions.map(transformAttachmentAction),\n});\n\nexport default (ctx, channelId: string, message: string, options: ?SendMessageOptionsType) => {\n  if (!options) {\n    return ctx.rtm.sendMessage(message, channelId);\n  }\n\n  return ctx.webClient.chat.postMessage(channelId, message, {\n    parse: options.parse,\n    link_names: options.linkNames,\n    attachments: options.attachments.map(transformAttachment),\n    unfurl_links: options.unfurlLinks,\n    unfurl_media: options.unfurlMedia,\n    username: options.username || ctx.bot.name,\n    as_user: options.asUser,\n    icon_url: options.iconUrl,\n    icon_emoji: options.iconEmoj,\n    thread_ts: options.threadTs,\n    reply_broadcast: options.replyBroadcast,\n  });\n};\n"]}