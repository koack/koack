{"version":3,"sources":["../../src/message-events-router/createEventHandlersMap.js"],"names":["compose","EventHandlerType","actions","map","dm","Map","channel","group","forEach","eventHandler","where","handler","middlewares","events","eventName","has","Error","set"],"mappings":"AACA,OAAOA,OAAP,MAAoB,aAApB;AACA,SAAcC,qCAAd,QAAsC,SAAtC;;;;AAEA,0DAA2B,SACzB,iBAAI,aAAI,UAAJ,EAAY,uBAAZ,CAAJ,CADyB,EAEzB,sBAAS,aAAI,UAAJ,EAAY,uBAAZ,CAAT,CAFyB,EAGzB,oBAAO,aAAI,UAAJ,EAAY,uBAAZ,CAAP,CAHyB,CAA3B;;;AAMA,gBAAe,gCAACC,OAAD,EAA2D;AAAA,qBAAnD,QAAQ,uBAAR,CAAmD;;AAAA,+BAAvB,mBAAuB;;AAAA;;AACxE,QAAMC,MAAM;AACVC,QAAI,IAAIC,GAAJ,EADM;AAEVC,aAAS,IAAID,GAAJ,EAFC;AAGVE,WAAO,IAAIF,GAAJ;AAHG,GAAZ;;AAMAH,UAAQM,OAAR,CAAiBC,YAAD,IAAoC;AAAA,4BAAvB,uBAAuB;;AAAA;;AAClD,QAAI,CAACA,aAAaC,KAAlB,EAAyBD,aAAaC,KAAb;AACzB,QAAI,CAACD,aAAaE,OAAlB,EAA2BF,aAAaE,OAAb,GAAuBX,QAAQS,aAAaG,WAArB,CAAvB;;AAE3BH,iBAAaC,KAAb,CAAmBF,OAAnB,CAA4BE,KAAD,IAAW;AACpCD,mBAAaI,MAAb,CAAoBL,OAApB,CAA6BM,SAAD,IAAuB;AAAA,6BAAb,UAAa;;AAAA;;AACjD,YAAIX,IAAIO,KAAJ,EAAWK,GAAX,CAAeD,SAAf,CAAJ,EAA+B,MAAM,IAAIE,KAAJ,CAAW,qBAAoBF,SAAU,GAAzC,CAAN;AAC/BX,YAAIO,KAAJ,EAAWO,GAAX,CAAeH,SAAf,EAA0BL,YAA1B;AACD,OAHD;AAID,KALD;AAMD,GAVD;;AAYA,4BAAON,GAAP;AACD,CApBD","file":"createEventHandlersMap.js","sourcesContent":["/* @flow */\nimport compose from 'koa-compose';\nimport type { EventHandlerType } from './types';\n\ntype EventHandlerMapType = {\n  dm: Map<string, EventHandlerType>,\n  channel: Map<string, EventHandlerType>,\n  group: Map<string, EventHandlerType>,\n}\n\nexport default (actions: Array<EventHandlerType>): EventHandlerMapType => {\n  const map = {\n    dm: new Map(),\n    channel: new Map(),\n    group: new Map(),\n  };\n\n  actions.forEach((eventHandler: EventHandlerType) => {\n    if (!eventHandler.where) eventHandler.where = ['dm', 'channel', 'group'];\n    if (!eventHandler.handler) eventHandler.handler = compose(eventHandler.middlewares);\n\n    eventHandler.where.forEach((where) => {\n      eventHandler.events.forEach((eventName: string) => {\n        if (map[where].has(eventName)) throw new Error(`event redefined: \"${eventName}\"`);\n        map[where].set(eventName, eventHandler);\n      });\n    });\n  });\n\n  return map;\n};\n"]}